<?php

namespace Lcdp\CommonBundle\Entity\Repository;

use DateTime;
use Doctrine\ORM\EntityRepository;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends EntityRepository
{

    /**
     * Permet de lister toutes les pages Ã©ditable du site
     *
     * @param array $filters Tableau contenant les filtres
     * @param array $order   Tableau contenant les tris
     * @param array $limit   Tableau contenant les limites
     *
     * @return array
     * @author AndrÃ© Tapia <contact@andretapia.com>
     */
    public function getList($filters = null, $orders = null, $limit = null)
    {
        $query = $this->createQueryBuilder('n')
                ->where('n.isDeleted = 0');

        if (!empty($filters)) {
            if (isset($filters['title']) && !empty($filters['title'])) {
                $query->andWhere('n.title LIKE :title');
                $query->setParameter('title', '%' . $filters['title'] . '%');
            }
            if (isset($filters['section']) && !empty($filters['section'])) {
                $query->andWhere('n.section IN (:section)');
                $query->setParameter('section', $filters['section']);
            }
            if (isset($filters['is_published']) && in_array($filters['is_published'], array('0', '1'))) {
                $query->andWhere('n.isPublished = :published');
                $query->setParameter('published', $filters['is_published']);
            }
            if (isset($filters['can_be_deleted']) && in_array($filters['can_be_deleted'], array('0', '1'))) {
                $query->andWhere('n.canBeDeleted = :canBeDeleted');
                $query->setParameter('canBeDeleted', $filters['can_be_deleted']);
            }
            if (isset($filters['is_published']) && $filters['is_published']) {
                $query->andWhere('n.publicatedAt < :now');
                $query->setParameter('now', new DateTime());
            }
            if (isset($filters['slug'])) {
                $query->andWhere('n.slug = :slug');
                $query->setParameter('slug', $filters['slug']);
            }
            if (isset($filters['diff_id'])) {
                $query->andWhere('n.id <> :id');
                $query->setParameter('id', $filters['diff_id']);
            }
        }

        if (!empty($orders)) {
            if (isset($orders['publication'])) {
                $query->orderBy('n.publicatedAt', $orders['publication']);
            }
        }

        if (!empty($limit)) {
            if (isset($limit['limit'])) {
                $query->setMaxResults($limit['limit']);
            }
        }

        $return = $query->getQuery()->getArrayResult();

        return $return;
    }
}
